// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pyramid.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PyramidRequest struct {
	H                    int32    `protobuf:"varint,1,opt,name=h,proto3" json:"h,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PyramidRequest) Reset()         { *m = PyramidRequest{} }
func (m *PyramidRequest) String() string { return proto.CompactTextString(m) }
func (*PyramidRequest) ProtoMessage()    {}
func (*PyramidRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e002e91b2090ea9, []int{0}
}

func (m *PyramidRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PyramidRequest.Unmarshal(m, b)
}
func (m *PyramidRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PyramidRequest.Marshal(b, m, deterministic)
}
func (m *PyramidRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PyramidRequest.Merge(m, src)
}
func (m *PyramidRequest) XXX_Size() int {
	return xxx_messageInfo_PyramidRequest.Size(m)
}
func (m *PyramidRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PyramidRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PyramidRequest proto.InternalMessageInfo

func (m *PyramidRequest) GetH() int32 {
	if m != nil {
		return m.H
	}
	return 0
}

type PyramidResponse struct {
	Answer               string   `protobuf:"bytes,1,opt,name=answer,proto3" json:"answer,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PyramidResponse) Reset()         { *m = PyramidResponse{} }
func (m *PyramidResponse) String() string { return proto.CompactTextString(m) }
func (*PyramidResponse) ProtoMessage()    {}
func (*PyramidResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_4e002e91b2090ea9, []int{1}
}

func (m *PyramidResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PyramidResponse.Unmarshal(m, b)
}
func (m *PyramidResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PyramidResponse.Marshal(b, m, deterministic)
}
func (m *PyramidResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PyramidResponse.Merge(m, src)
}
func (m *PyramidResponse) XXX_Size() int {
	return xxx_messageInfo_PyramidResponse.Size(m)
}
func (m *PyramidResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PyramidResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PyramidResponse proto.InternalMessageInfo

func (m *PyramidResponse) GetAnswer() string {
	if m != nil {
		return m.Answer
	}
	return ""
}

func init() {
	proto.RegisterType((*PyramidRequest)(nil), "api.PyramidRequest")
	proto.RegisterType((*PyramidResponse)(nil), "api.PyramidResponse")
}

func init() { proto.RegisterFile("pyramid.proto", fileDescriptor_4e002e91b2090ea9) }

var fileDescriptor_4e002e91b2090ea9 = []byte{
	// 138 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0xa8, 0x2c, 0x4a,
	0xcc, 0xcd, 0x4c, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2c, 0xc8, 0x54, 0x92,
	0xe3, 0xe2, 0x0b, 0x80, 0x88, 0x06, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0xf1, 0x70, 0x31,
	0x66, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0xb0, 0x06, 0x31, 0x66, 0x28, 0x69, 0x72, 0xf1, 0xc3, 0xe5,
	0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0x85, 0xc4, 0xb8, 0xd8, 0x12, 0xf3, 0x8a, 0xcb, 0x53, 0x8b,
	0xc0, 0xaa, 0x38, 0x83, 0xa0, 0x3c, 0x23, 0x37, 0x2e, 0x76, 0xa8, 0x52, 0x21, 0x6b, 0x2e, 0x1e,
	0xa7, 0xd2, 0xcc, 0x9c, 0x14, 0x18, 0x5f, 0x58, 0x2f, 0xb1, 0x20, 0x53, 0x0f, 0xd5, 0x22, 0x29,
	0x11, 0x54, 0x41, 0x88, 0xe9, 0x4a, 0x0c, 0x49, 0x6c, 0x60, 0xe7, 0x19, 0x03, 0x02, 0x00, 0x00,
	0xff, 0xff, 0x72, 0xd6, 0x7c, 0x01, 0xaf, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PyramidClient is the client API for Pyramid service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PyramidClient interface {
	BuildPyramid(ctx context.Context, in *PyramidRequest, opts ...grpc.CallOption) (*PyramidResponse, error)
}

type pyramidClient struct {
	cc grpc.ClientConnInterface
}

func NewPyramidClient(cc grpc.ClientConnInterface) PyramidClient {
	return &pyramidClient{cc}
}

func (c *pyramidClient) BuildPyramid(ctx context.Context, in *PyramidRequest, opts ...grpc.CallOption) (*PyramidResponse, error) {
	out := new(PyramidResponse)
	err := c.cc.Invoke(ctx, "/api.Pyramid/BuildPyramid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PyramidServer is the server API for Pyramid service.
type PyramidServer interface {
	BuildPyramid(context.Context, *PyramidRequest) (*PyramidResponse, error)
}

// UnimplementedPyramidServer can be embedded to have forward compatible implementations.
type UnimplementedPyramidServer struct {
}

func (*UnimplementedPyramidServer) BuildPyramid(ctx context.Context, req *PyramidRequest) (*PyramidResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuildPyramid not implemented")
}

func RegisterPyramidServer(s *grpc.Server, srv PyramidServer) {
	s.RegisterService(&_Pyramid_serviceDesc, srv)
}

func _Pyramid_BuildPyramid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PyramidRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PyramidServer).BuildPyramid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Pyramid/BuildPyramid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PyramidServer).BuildPyramid(ctx, req.(*PyramidRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Pyramid_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Pyramid",
	HandlerType: (*PyramidServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "BuildPyramid",
			Handler:    _Pyramid_BuildPyramid_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pyramid.proto",
}
